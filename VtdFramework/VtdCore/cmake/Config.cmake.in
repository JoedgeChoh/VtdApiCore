@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Macros.cmake")

find_vires_dependencies_optional()

if(ViresDependencies_ROOT) #internal build
    if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
        set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH "Overridden default install prefix" FORCE)
    endif()
endif()

find_package(Boost 1.63 REQUIRED COMPONENTS system thread chrono filesystem regex)
    find_package(TinyXML REQUIRED)

    find_package(JPEG QUIET)
    if(JPEG_FOUND)
        option(VtdFramework_USE_JPEG "JPEG Support" ON)
    else()
        option(VtdFramework_USE_JPEG "JPEG Support" OFF)
        message("VtdFramework_USE_JPEG is switched off as JPEG package is missing.")
    endif()

    find_package(PNG QUIET)
    if(PNG_FOUND)
        option(VtdFramework_USE_PNG "Support PNG" ON)
    else()
        option(VtdFramework_USE_PNG "Support PNG" OFF)
        message("VtdFramework_USE_PNG is switched off as PNG package is missing.")
    endif()

    set(HDF5_USE_STATIC_LIBRARIES ON)
    find_package(HDF5 QUIET)
    if(HDF5_FOUND)
        option(VtdFramework_USE_HDF5 "Support HDF5" ON)
    else()
        option(VtdFramework_USE_HDF5 "Support HDF5" OFF)
        message("Build HDF5 is switched off as HDF5 package is missing.")
    endif()    age(WARNING "Build HDF5 is switched off as HDF5 package is missing.")
endif()


include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
check_required_components("@PROJECT_NAME@")
