##################################################################################################
# 
# CMake script for finding Lz4.
# 
# Input variables:
# 
# - Lz4_ROOT(optional): When specified, header files and libraries will be searched for in
#     ${Lz4_ROOT}/include
#     ${Lz4_ROOT}/libs
#   respectively, and the default CMake search order will be ignored. When unspecified, the default
#   CMake search order is used.
#   This variable can be specified either as a CMake or environment variable. If both are set,
#   preference is given to the CMake variable.
#   Use this variable for finding packages installed in a nonstandard location, or for enforcing
#   that one of multiple package installations is picked up.
# 
# 
# Cache variables (not intended to be used in CMakeLists.txt files)
# 
# - Lz4_INCLUDE_DIR: Absolute path to package headers.
# - Lz4_LIBRARY: Absolute path to library.
# 
# 
# Output variables:
# 
# - Lz4_FOUND: Boolean that indicates if the package was found
# - Lz4_INCLUDE_DIRS: Paths to the necessary header files
# - Lz4_LIBRARIES: Package libraries
# - Lz4_LIBRARY_SHARED: Shared package library
# - Lz4_LIBRARY_STATIC: Static package library
#
# Imported Targets:
# 
# Lz4::Lz4 - generic imported target resolving either shared, or static library.
# Lz4::Shared - imported target for shared library, only set if Lz4_LIBRARY_SHARED is set
# Lz4::Static - omported target for static library, only set if Lz4_LIBRARY_STATIC is set
# 
# 
# Example usage:
# 
#  find_package(Lz4)
#  if(NOT Lz4_FOUND)
#    # Error handling
#  endif()
#  ...
#  include_directories(${Lz4_INCLUDE_DIRS} ...)
#  ...
#  target_link_libraries(my_target ${Lz4_LIBRARIES})
# 
##################################################################################################
# Get package location hint from environment variable (if any)
if(NOT Lz4_ROOT AND DEFINED ENV{Lz4_ROOT})
  set(Lz4_ROOT "$ENV{Lz4_ROOT}" CACHE PATH
      "Lz4 base directory location (optional, used for nonstandard installation paths)")
elseif(NOT Lz4_ROOT AND DEFINED ENV{Lz4_ROOT_DIR})
  set(Lz4_ROOT "$ENV{Lz4_ROOT_DIR}" CACHE PATH
      "Lz4 base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations

if(Lz4_ROOT)
  set(Lz4_INCLUDE_PATH PATHS "${Lz4_ROOT}/include" "${Lz4_ROOT}/inc" NO_DEFAULT_PATH)
  set(Lz4_LIBRARY_PATH PATHS "${Lz4_ROOT}/dll" "${Lz4_ROOT}/lib" NO_DEFAULT_PATH)
endif()

# Find headers and libraries
find_path(Lz4_INCLUDE_DIR NAMES lz4.h PATH_SUFFIXES "lz4" ${Lz4_INCLUDE_PATH})
find_library(Lz4_LIBRARY NAMES liblz4 lz4 Lz4 PATH_SUFFIXES "lz4" ${Lz4_LIBRARY_PATH})
if(WIN32)
	find_file(Lz4_LIBRARY_SHARED liblz4.dll ${Lz4_LIBRARY_PATH})
else()
	find_library(Lz4_LIBRARY_SHARED NAMES liblz4.so libLz4.so PATH_SUFFIXES "lz4" ${Lz4_LIBRARY_PATH})
endif()
if(WIN32)
	find_file(Lz4_LIBRARY_STATIC liblz4.lib ${Lz4_LIBRARY_PATH})
else()
	find_library(Lz4_LIBRARY_STATIC NAMES liblz4.a libLz4.a PATH_SUFFIXES "lz4" ${Lz4_LIBRARY_PATH})
endif()

mark_as_advanced(Lz4_INCLUDE_DIR
                 Lz4_LIBRARY
                 Lz4_LIBRARY_SHARED
                 Lz4_LIBRARY_STATIC)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Lz4 DEFAULT_MSG Lz4_LIBRARY
                                                      Lz4_INCLUDE_DIR)

set(Lz4_FOUND ${LZ4_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
unset(LZ4_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(Lz4_FOUND)
  set(Lz4_INCLUDE_DIRS ${Lz4_INCLUDE_DIR})
  set(Lz4_LIBRARIES ${Lz4_LIBRARY})

  add_library(Lz4::Lz4 UNKNOWN IMPORTED)
  set_target_properties(Lz4::Lz4 PROPERTIES
    IMPORTED_LOCATION "${Lz4_LIBRARY}"
    INTERFACE_INCLUDE_DIRECTORIES "${Lz4_INCLUDE_DIR}"
  )

  if(Lz4_LIBRARY_STATIC)
    add_library(Lz4::Static STATIC IMPORTED)
    set_target_properties(Lz4::Static PROPERTIES
      IMPORTED_LOCATION "${Lz4_LIBRARY_STATIC}"
      INTERFACE_INCLUDE_DIRECTORIES "${Lz4_INCLUDE_DIR}"
    )

    add_library(Lz4::MainStatic INTERFACE IMPORTED)
    set_target_properties(Lz4::MainStatic PROPERTIES
      INTERFACE_LINK_LIBRARIES "Lz4::Static"
    )
  endif()

  if(Lz4_LIBRARY_SHARED)
    add_library(Lz4::Shared SHARED IMPORTED)
    set_target_properties(Lz4::Shared PROPERTIES
      IMPORTED_LOCATION "${Lz4_LIBRARY_SHARED}"
      INTERFACE_INCLUDE_DIRECTORIES "${Lz4_INCLUDE_DIR}"
    )
  endif()

  add_library(Lz4::Main INTERFACE IMPORTED)
  set_target_properties(Lz4::Main PROPERTIES
    INTERFACE_LINK_LIBRARIES "Lz4::Lz4"
  )

endif()
